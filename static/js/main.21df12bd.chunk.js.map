{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilteredBy","TodoList","todos","showTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","onChangeQuery","filterBy","setFilterBy","value","onChange","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","hideTodo","useState","user","setUser","isError","setIsError","useEffect","loadUser","a","userId","currentUser","href","email","name","App","setTodos","setSelectedTodo","setQuery","isLoading","setIsLoading","getVisibleTodos","readyQuery","toLowerCase","trim","visibleTodos","filter","includes","filteredTodos","loadTodos","data","useCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21df12bd.chunk.js","sourcesContent":["export enum FilteredBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  showTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  showTodo,\n  selectedTodo,\n}) => {\n  const isSelected = (id: number) => selectedTodo?.id === id;\n\n  return (\n    <table\n      className=\"\n        table\n        is-narrow\n        is-fullwidth\n      \"\n    >\n      <thead>\n        <tr>\n          <th>#</th>\n\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n\n          <th>Title</th>\n\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames(\n              { 'has-background-info-light': selectedTodo },\n            )}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span\n                  className=\"icon\"\n                  data-cy=\"iconCompleted\"\n                >\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"\n                  is-vcentered\n                  is-expanded\n                \"\n            >\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"\n                  has-text-right\n                  is-vcentered\n                \"\n            >\n              {isSelected(todo.id) ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => showTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilteredBy } from '../../types/Filter';\n\ntype Props = {\n  query: string,\n  onChangeQuery: (query: string) => void,\n  filterBy: FilteredBy,\n  setFilterBy: (filterBy: FilteredBy) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  filterBy,\n  setFilterBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={({ target }) => {\n            setFilterBy(target.value as FilteredBy);\n          }}\n        >\n          <option value={FilteredBy.ALL}>\n            All\n          </option>\n\n          <option value={FilteredBy.ACTIVE}>\n            Active\n          </option>\n\n          <option value={FilteredBy.COMPLETED}>\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={({ target }) => {\n          onChangeQuery(target.value);\n        }}\n      />\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            aria-label=\"Delete\"\n            onClick={() => {\n              onChangeQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div\n    className=\"Loader\"\n    data-cy=\"loader\"\n  >\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  hideTodo: () => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoModal: React.FC<Props> = ({ hideTodo, selectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const currentUser = await getUser(selectedTodo?.userId || 0);\n\n        setUser(currentUser);\n      } catch (error) {\n        setIsError(true);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Delete\"\n              data-cy=\"modal-close\"\n              onClick={hideTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p\n              className=\"block\"\n              data-cy=\"modal-user\"\n            >\n              {selectedTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              {isError ? (\n                <span className=\"has-text-danger\">The user not found</span>\n              ) : (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilteredBy } from './types/Filter';\nimport { getTodos } from './api';\n\n// const filteredTodos = (todos: Todo[], query: string, filterBy: FilteredBy) => {\n//   let readyTodos = [...todos];\n\n//   if (query) {\n//     const readyQuery = query.toLowerCase().trim();\n\n//     readyTodos = readyTodos.filter(todo => todo.title.toLowerCase()\n//       .includes(readyQuery));\n//   }\n\n//   switch (filterBy) {\n//     case FilteredBy.ACTIVE:\n//       return readyTodos.filter(todo => !todo.completed);\n//     case FilteredBy.COMPLETED:\n//       return readyTodos.filter(todo => todo.completed);\n//     default:\n//       return readyTodos;\n//   }\n// };\nconst filteredTodos = (todos: Todo[], query: string, filterBy: FilteredBy) => {\n  const readyQuery = query.toLowerCase().trim();\n\n  const visibleTodos = (filterBy === FilteredBy.ACTIVE)\n    ? todos.filter(todo => !todo.completed)\n    : (filterBy === FilteredBy.COMPLETED\n      ? todos.filter(todo => todo.completed)\n      : [...todos]);\n\n  return readyQuery\n    ? visibleTodos.filter(todo => todo.title.toLowerCase().includes(readyQuery))\n    : visibleTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState<FilteredBy>(FilteredBy.ALL);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const getVisibleTodos = filteredTodos(todos, query, filterBy);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const data = await getTodos();\n\n        setTodos(data);\n        setIsLoading(false);\n      } catch (err) {\n        setIsError(true);\n        setIsLoading(false);\n      }\n    };\n\n    loadTodos();\n  }, []);\n\n  const showTodo = useCallback((todo: Todo) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  const hideTodo = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeQuery={setQuery}\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {isError ? (\n                <p className=\"has-danger-text\">\n                  Error: Service is Unavailable\n                </p>\n              ) : (\n                <TodoList\n                  todos={getVisibleTodos}\n                  showTodo={showTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          hideTodo={hideTodo}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}